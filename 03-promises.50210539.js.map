{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgDA,SAASC,EAAcC,EAAUC,GAc7B,OAZgB,IAAIC,SAAQ,CAACC,EAASC,KAClCC,YAAW,KACeC,KAAKC,SAAW,GAGlCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAExBA,MAxDSO,SAASC,cAAc,SAG/BC,iBAAiB,UAE7B,SAA2BC,GACvBA,EAAMC,iBAEN,MAAMC,EAAc,GAEpB,IAAK,MAAMC,KAAgBH,EAAMI,cAAcC,SAGvCF,EAAaG,aAAa,SAAkC,KAAvBH,EAAaI,QAClDL,EAAYC,EAAaK,MAAQL,EAAaI,QAQ1D,UAAuBjB,MAAAmB,EAAKC,KAAEA,EAAIC,OAAEA,GAAW,IAG3C,IAAIC,EAAaC,OAAOJ,GACxB,MAAMK,EAAWD,OAAOH,GAClBK,EAAcF,OAAOF,GAI3B,IAAK,IAAIK,EAAI,EAAGA,EAAID,EAAaC,GAAK,EAClC5B,EAAc4B,EAAGJ,GACZK,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACf4B,QAAQC,IAAI,uBAAqB9B,EAAY,QAASC,OACtDJ,EAAAkC,OAAOC,QAAQ,uBAAqBhC,EAAY,QAASC,UAE5DgC,OAAM,EAACjC,SAAEA,EAAQC,MAAEA,MAChB4B,QAAQC,IAAI,sBAAoB9B,EAAY,QAASC,OACrDJ,EAAAkC,OAAOG,QAAQ,sBAAoBlC,EAAU,QAASC,UAE9DsB,GAAcE,EAtBlBU,CAAYtB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// Notify.info('Background-color');\n\nconst formElement = document.querySelector('.form');\n// console.log(formElement);\n\nformElement.addEventListener('submit', setOptionsPromise);\n\nfunction setOptionsPromise(event) {\n    event.preventDefault();\n    // console.log(event.currentTarget.elements);\n    const optionsData = {};\n\n    for (const inputElement of event.currentTarget.elements) {\n        // console.log(inputElement);\n\n        if (inputElement.hasAttribute('name') && inputElement.value !== '') {\n            optionsData[inputElement.name] = inputElement.value;\n        }\n    }\n\n    // console.log(optionsData);\n    initPromise(optionsData);\n}\n\nfunction initPromise({ delay, step, amount } = {}) {\n    // console.log(delay, step, amount);\n\n    let firstDelay = Number(delay);\n    const stepCall = Number(step);\n    const allPosition = Number(amount);\n\n    // console.log(firstDelay, stepCall, allPosition);\n\n    for (let i = 0; i < allPosition; i += 1) {\n        createPromise(i, firstDelay)\n            .then(({ position, delay }) => {\n                console.log(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n                Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n            })\n            .catch(({ position, delay }) => {\n                console.log(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n                Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n            });\n        firstDelay += stepCall;\n    }\n}\n\nfunction createPromise(position, delay) {\n\n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            const shouldResolve = Math.random() > 0.3;\n\n            if (shouldResolve) {\n                resolve({ position, delay });\n            } else {\n                reject({ position, delay });\n            }\n        }, delay);\n    });\n\n    return promise;\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","optionsData","inputElement","currentTarget","elements","hasAttribute","value","name","delay1","step","amount","firstDelay","Number","stepCall","allPosition","i","then","console","log","Notify","success","catch","failure","$47d4ff9957288465$var$initPromise"],"version":3,"file":"03-promises.50210539.js.map"}